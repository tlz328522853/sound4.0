<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.sdcloud.biz.envsanitation.dao.RpCarInsureInfoDao">

	<sql id="rpCarInsureInfoColumn">
		id,assetId,strongPolicyNumber,businessPolicyNumber,isNew,startDate,endDate,
		damageAmount,damageFee,threeAmount,threeFee,nonDeductibleFee,robberyAmount,
		robberyFee,brokenGlassAmount,brokenGlassFee,driverAmount,driverFee,
		passengerAmount,passengerFee,strongInsurance,vehicleTax,tenantId,
		createUser,createTime,updateUser,updateTime
	</sql>
	
	<insert id="insert" parameterType="RpCarInsureInfo">
		insert into rp_car_insure_info (
			<include refid="rpCarInsureInfoColumn"/>		
		) values
		<foreach item="item" index="index" collection="list" separator=",">
		(
			#{item.id},#{item.assetId},#{item.strongPolicyNumber},#{item.businessPolicyNumber},#{item.isNew},
			#{item.startDate},#{item.endDate},#{item.damageAmount},#{item.damageFee},#{item.threeAmount},
			#{item.threeFee},#{item.nonDeductibleFee},#{item.robberyAmount},#{item.robberyFee},
			#{item.brokenGlassAmount},#{item.brokenGlassFee},#{item.driverAmount},#{item.driverFee},
			#{item.passengerAmount},#{item.passengerFee},#{item.strongInsurance},#{item.vehicleTax},#{item.tenantId},
			#{item.createUser},now(),#{item.updateUser},now()
		)
		</foreach>
	</insert>
	
	<update id="update" parameterType="RpCarInsureInfo">
		update rp_car_insure_info
		<set>
		    assetId = #{assetId},strongPolicyNumber = #{strongPolicyNumber},businessPolicyNumber = #{businessPolicyNumber},
		    isNew = #{isNew},startDate = #{startDate},endDate = #{endDate},damageAmount = #{damageAmount},
		    damageFee = #{damageFee},threeAmount = #{threeAmount},threeFee = #{threeFee},
		    nonDeductibleFee = #{nonDeductibleFee},robberyAmount = #{robberyAmount},robberyFee = #{robberyFee},
		    brokenGlassAmount = #{brokenGlassAmount},brokenGlassFee = #{brokenGlassFee},driverAmount = #{driverAmount},
		    driverFee = #{driverFee},passengerAmount = #{passengerAmount},passengerFee = #{passengerFee},
		    strongInsurance = #{strongInsurance},vehicleTax = #{vehicleTax},
		    updateUser = #{updateUser},updateTime = now()
		</set>
		where id = #{id}
	</update>
	
	<select id="getTotalCount" resultType="long">
		select count(r.id) from rp_car_insure_info r
		left join so_asset_car c on r.assetId = c.assetId
		left join so_asset_object o on c.assetId = o.assetId
		left join pf_org p on o.newOrgId = p.orgId
		left join pf_org po on p.companyId = po.orgId
		<include refid="queryCondition"/>
	</select>
	
	<select id="findAllBy" parameterType="map" resultType="RpCarInsureInfo">
		select r.*, c.carNumber, ce.name createUserName, ue.name updateUserName, p.companyId, po.name companyName
		from rp_car_insure_info r
		left join pf_employee ce on r.createUser = ce.employeeId
		left join pf_employee ue on r.updateUser = ue.employeeId
		left join so_asset_car c on r.assetId = c.assetId
		left join so_asset_object o on c.assetId = o.assetId
		left join pf_org p on o.newOrgId = p.orgId
		left join pf_org po on p.companyId = po.orgId
		<include refid="queryCondition"/>
		<if test="pager != null">
		 	<if test="pager.orderBy!=null &amp;&amp; pager.orderBy!=''">
				order by ${pager.orderBy}
				<if test="pager.order!=null &amp;&amp; pager.order!=''">
				  ${pager.order}
				</if>
			</if>
			<if test="for_method_exportData == null">
				limit #{pager.first}, #{pager.pageSize}
			</if>
		</if>
	</select>
	
	<!-- 查询条件 -->
	<sql id="queryCondition">
		<where>
		 	<if test="companyIds != null &amp;&amp; companyIds.size() != 0">
				and po.orgId in
		      	<foreach item="item" index="index" collection="companyIds" open="(" separator="," close=")">
		      		${item}
		      	</foreach>
	      	</if>
	      	<if test="carNumber != null &amp;&amp; carNumber != ''">
	      		and c.carNumber like concat('%', #{carNumber}, '%')
	      	</if>
	      	<if test="isNew != null &amp;&amp; isNew != ''">
	      		and r.isNew = #{isNew}
	      	</if>
	      	<if test="strongPolicyNumber != null &amp;&amp; strongPolicyNumber != ''">
	      		and r.strongPolicyNumber like concat('%', #{strongPolicyNumber}, '%')
	      	</if>
	      	<if test="businessPolicyNumber != null &amp;&amp; businessPolicyNumber != ''">
	      		and r.businessPolicyNumber like concat('%', #{businessPolicyNumber}, '%')
	      	</if>
		</where>	
	</sql>
	
	<delete id="delete">
		delete from rp_car_insure_info
		<choose>
			<when test="ids != null &amp;&amp; ids.size() != 0">
				where id in
		      	<foreach item="item" index="index" collection="ids" open="(" separator="," close=")">
		      		#{item}
		      	</foreach>
		    </when>
		    <otherwise>
		      	where 1 = 2
		    </otherwise>
		</choose>
	</delete>
	
</mapper>