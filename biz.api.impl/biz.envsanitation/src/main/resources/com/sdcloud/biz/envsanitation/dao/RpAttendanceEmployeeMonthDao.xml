<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.sdcloud.biz.envsanitation.dao.RpAttendanceEmployeeMonthDao">

	<sql id="rpAttendanceEmployeeMonthColumn">
		id,employeeId,month,fullDay,attendanceDay,sickLeaveDay,funeralDay,
		lactationLeaveDay,accompanyDay,trainDay,checkDay,matterDay,offDay,
		annualLeaveDay,absenteeismDay,travelDay,lateDay,earlyDay,
		workOvertime,weekendOvertime,holidayOvertime,remarks,tenantId,
		createUser,createTime,updateUser,updateTime
	</sql>
	
	<insert id="insert" parameterType="RpAttendanceEmployeeMonth">
		insert into rp_attendance_employee_month (
			<include refid="rpAttendanceEmployeeMonthColumn"/>		
		) values
		<foreach item="item" index="index" collection="list" separator=",">
		(
			#{item.id},#{item.employeeId},#{item.month},#{item.fullDay},#{item.attendanceDay},
			#{item.sickLeaveDay},#{item.funeralDay},#{item.lactationLeaveDay},#{item.accompanyDay},
			#{item.trainDay},#{item.checkDay},#{item.matterDay},#{item.offDay},#{item.annualLeaveDay},
			#{item.absenteeismDay},#{item.travelDay},#{item.lateDay},#{item.earlyDay},
			#{item.workOvertime},#{item.weekendOvertime},#{item.holidayOvertime},#{item.remarks},
			#{item.tenantId},#{item.createUser},now(),#{item.updateUser},now()
		)
		</foreach>
	</insert>
	
	<update id="update" parameterType="RpAttendanceEmployeeMonth">
		update rp_attendance_employee_month
		<set>
		    employeeId = #{employeeId},month = #{month},fullDay = #{fullDay},
		    attendanceDay = #{attendanceDay},sickLeaveDay = #{sickLeaveDay},funeralDay = #{funeralDay},
		    lactationLeaveDay = #{lactationLeaveDay},accompanyDay = #{accompanyDay},trainDay = #{trainDay},
		    checkDay = #{checkDay},matterDay = #{matterDay},offDay = #{offDay},
		    annualLeaveDay = #{annualLeaveDay},absenteeismDay = #{absenteeismDay},travelDay = #{travelDay},
		    lateDay = #{lateDay},earlyDay = #{earlyDay},workOvertime = #{workOvertime},
		    weekendOvertime = #{weekendOvertime},holidayOvertime = #{holidayOvertime},
		    remarks = #{remarks},updateUser = #{updateUser},updateTime = now()
		</set>
		where id = #{id}
	</update>
	
	<select id="getTotalCount" resultType="long">
		select count(r.id) from rp_attendance_employee_month r
		left join pf_employee e on r.employeeId = e.employeeId
		left join pf_org p on e.orgId = p.orgId
		left join pf_org po on p.companyId = po.orgId
		<include refid="queryCondition"/>
	</select>
	
	<select id="findAllBy" parameterType="map" resultType="RpAttendanceEmployeeMonth">
		select r.*, e.name employeeName, ce.name createUserName, ue.name updateUserName, p.companyId, po.name companyName
		from rp_attendance_employee_month r
		left join pf_employee e on r.employeeId = e.employeeId
		left join pf_org p on e.orgId = p.orgId
		left join pf_org po on p.companyId = po.orgId
		left join pf_employee ce on r.createUser = ce.employeeId
		left join pf_employee ue on r.updateUser = ue.employeeId
		<include refid="queryCondition"/>
		<if test="pager != null">
		 	<if test="pager.orderBy!=null &amp;&amp; pager.orderBy!=''">
				order by ${pager.orderBy}
				<if test="pager.order!=null &amp;&amp; pager.order!=''">
				  ${pager.order}
				</if>
			</if>
			<if test="for_method_exportData == null">
				limit #{pager.first}, #{pager.pageSize}
			</if>
		</if>
	</select>
	
	<!-- 查询条件 -->
	<sql id="queryCondition">
		<where>
		 	<if test="companyIds != null &amp;&amp; companyIds.size() != 0">
				and po.orgId in
		      	<foreach item="item" index="index" collection="companyIds" open="(" separator="," close=")">
		      		${item}
		      	</foreach>
	      	</if>
	      	<if test="employeeName != null &amp;&amp; employeeName != ''">
	      		and e.name like concat('%', #{employeeName}, '%')
	      	</if>
	      	<if test="month != null &amp;&amp; month != ''">
	      		and r.month like concat('%', #{month}, '%')
	      	</if>
		</where>	
	</sql>
	
	<delete id="delete">
		delete from rp_attendance_employee_month
		<choose>
			<when test="ids != null &amp;&amp; ids.size() != 0">
				where id in
		      	<foreach item="item" index="index" collection="ids" open="(" separator="," close=")">
		      		#{item}
		      	</foreach>
		    </when>
		    <otherwise>
		      	where 1 = 2
		    </otherwise>
		</choose>
	</delete>
	
	<select id="findRpAttendanceEmployeeMonthByParam" parameterType="map" resultType="RpAttendanceEmployeeMonth">
		select employeeId, month from rp_attendance_employee_month
		<where>
			<if test="employeeId != null">
				and employeeId = ${employeeId}
			</if>
			<if test="month != null &amp;&amp; month != ''">
				and month = #{month}
			</if>
		</where>
	</select>
	
</mapper>