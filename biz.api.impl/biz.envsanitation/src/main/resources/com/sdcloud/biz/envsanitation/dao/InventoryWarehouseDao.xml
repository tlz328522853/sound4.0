<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.sdcloud.biz.envsanitation.dao.InventoryWarehouseDao">

	<sql id="inventorywColumn">
	
		inventoryId,
		dicId,
		createdTime,
		tenantId
	</sql>
	<insert id="insert" parameterType="list">
		insert into so_inventory_warehouse(
			inventorywId, <include refid="inventorywColumn"/>		
		)values
		<foreach item="item" index="index" collection="inventoryws" separator=",">
			(#{item.inventorywId},#{item.inventoryId},
			#{item.dicId},#{item.createdTime},
			#{item.tenantId})
		</foreach>
	</insert>
	
	<delete id="deletes">
		delete from so_inventory_warehouse
		<where>
			<if test="dicId != null &amp;&amp;dicId !=''">
				 dicId = #{dicId}
			</if>
			<if test="inventoryIds != null &amp;&amp; inventoryIds.size()>0">
				and  inventoryId in
		      	<foreach item="item" index="index" collection="inventoryIds" open="(" separator="," close=")">
		      		#{item}
		      	</foreach>
			</if>
		</where>
	</delete>
	 <delete id="delete" parameterType="list" >
		delete from so_inventory_warehouse
		<choose>
			<when test="inventorywIds != null &amp;&amp; inventorywIds.size() != 0">
				where inventorywId in
		      	<foreach item="item" index="index" collection="inventorywIds" open="(" separator="," close=")">
		      		#{item}
		      	</foreach>
		    </when>
		    <otherwise>
		      	where 1 = 2
		    </otherwise>
		</choose>
	</delete>
	
	<update id="update" parameterType="InventoryWarehouse">
		update so_inventory_warehouse
		<set>
			<if test="inventoryId != null &amp;&amp; inventoryId != ''">inventoryId = #{inventoryId},</if>
			<if test="dicId != null">dicId = #{dicId},</if>
			<if test="createdTime != null &amp;&amp; createdTime != ''">createdTime = #{createdTime},</if>
			<if test="tenantId != null">tenantId = #{tenantId},</if>
		</set>
		where inventorywId = #{inventorywId}
	</update>
	
	
	
	<select id="getTotalCount" resultType="long">
		select count(si.inventoryId)
		from so_inventory_warehouse c
		 INNER JOIN so_inventory si 
		 on si.inventoryId =c.inventoryId
	   <where>
			<if test="inventoryId != null &amp;&amp; inventoryId !=0">
				c.inventoryId = #{inventoryId}
			</if>
			<if test="filterInventoryIds!= null">
				c.inventoryId not in
				<foreach item="item" index="index" collection="filterInventoryIds" open="(" separator="," close=")">
		      		#{item}
		      	</foreach>
			</if>
			<if test="inventorywId != null &amp;&amp; inventorywId !=0">
				and c.inventorywId = #{inventorywId}
			</if>
			<if test="dicId != null &amp;&amp;dicId !=''">
				and c.dicId = #{dicId}
			</if>
			<if test="createdTime != null &amp;&amp;createdTime !=null">
				and c.createdTime between #{createdTime} and #{createdTime}
			</if>
			<if test="inventoryCode != null &amp;&amp;inventoryCode !=''">
				and si.inventoryCode like '%${inventoryCode}%'
			</if>
			<if test="inventoryName != null &amp;&amp;inventoryName !=''">
				and si.inventoryName like '%${inventoryName}%'
			</if>
			<if test="type != null &amp;&amp;type !=''">
				and si.type like '%${type}%'
			</if>
			<if test="categoryACB != null &amp;&amp;categoryACB !=''">
				and si.categoryACB like '%${categoryACB}%'
			</if>
			<if test="tenantId != null">
				and c.tenantId = #{tenantId}
			</if>
			
		</where>
	</select>
	
	<select id="findAllBy" resultType="Inventory">
	    select 	si.*
	    from so_inventory_warehouse c
	    INNER JOIN so_inventory si 
		on si.inventoryId =c.inventoryId
	   <where>
			<if test="inventoryId != null &amp;&amp;inventoryId !=0">
				c.inventoryId = #{inventoryId}
			</if>
			
			<if test="filterInventoryIds!= null">
				c.inventoryId not in
				<foreach item="item" index="index" collection="filterInventoryIds" open="(" separator="," close=")">
		      		#{item}
		      	</foreach>
			</if>
			<if test="inventorywId != null &amp;&amp; inventorywId !=0">
				and c.inventorywId = #{inventorywId}
			</if>
			<if test="dicId != null &amp;&amp;dicId !=''">
				and c.dicId = #{dicId}
			</if>
			<if test="createdTime != null &amp;&amp;createdTime !=null">
				and c.createdTime between #{createdTime} and #{createdTime}
			</if>
			<if test="inventoryCode != null &amp;&amp;inventoryCode !=''">
				and si.inventoryCode like '%${inventoryCode}%'
			</if>
			<if test="inventoryName != null &amp;&amp;inventoryName !=''">
				and si.inventoryName like '%${inventoryName}%'
			</if>
			<if test="type != null &amp;&amp;type !=''">
				and si.type like '%${type}%'
			</if>
			<if test="categoryACB != null &amp;&amp;categoryACB !=''">
				and si.categoryACB like '%${categoryACB}%'
			</if>
			<if test="tenantId != null">
				and c.tenantId = #{tenantId}
			</if>
		</where>
		<if test="pager != null">
			order by c.createdTime
			limit #{pager.first}, #{pager.pageSize}
		</if>
	</select> 
	
</mapper>