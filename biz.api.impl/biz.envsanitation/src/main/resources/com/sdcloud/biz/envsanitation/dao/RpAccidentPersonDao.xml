<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.sdcloud.biz.envsanitation.dao.RpAccidentPersonDao">

	<sql id="rpAccidentPersonColumn">
		id,companyId,reportDate,reportPerson,name,gender,age,
		jobTitle,isSocialSecurity,accidentDate,accidentAddress,accidentCourse,
		accidentGrade,maimNumber,dieNumber,accidentCause,preventionPlan,
		disposeOpinion,claimsSubmitDate,claimsIsFull,claimsNoticesDate,
		claimsSchedule,notSettleCause,hospitalized,hospitalizedDateNumber,
		hospitalizationDamage,lossDamage,damageAmount,invoiceMoney,settleDate,
		responsiblePerson,remark,tenantId,createUser,createTime,updateUser,updateTime
	</sql>
	
	<insert id="insert" parameterType="RpAccidentPerson">
		insert into rp_accident_person (
			<include refid="rpAccidentPersonColumn"/>		
		) values
		<foreach item="item" index="index" collection="list" separator=",">
		(
			#{item.id},#{item.companyId},#{item.reportDate},#{item.reportPerson},#{item.name},#{item.gender},
			#{item.age},#{item.jobTitle},#{item.isSocialSecurity},#{item.accidentDate},#{item.accidentAddress},
			#{item.accidentCourse},#{item.accidentGrade},#{item.maimNumber},#{item.dieNumber},
			#{item.accidentCause},#{item.preventionPlan},#{item.disposeOpinion},#{item.claimsSubmitDate},
			#{item.claimsIsFull},#{item.claimsNoticesDate},#{item.claimsSchedule},#{item.notSettleCause},
			#{item.hospitalized},#{item.hospitalizedDateNumber},#{item.hospitalizationDamage},#{item.lossDamage},
			#{item.damageAmount},#{item.invoiceMoney},#{item.settleDate},#{item.responsiblePerson},#{item.remark},
			#{item.tenantId},#{item.createUser},now(),#{item.updateUser},now()
		)
		</foreach>
	</insert>
	
	<update id="update" parameterType="RpAccidentPerson">
		update rp_accident_person
		<set>
		    reportDate = #{reportDate},reportPerson = #{reportPerson},name = #{name},
		    gender = #{gender},age = #{age},jobTitle = #{jobTitle},isSocialSecurity = #{isSocialSecurity},
		    accidentDate = #{accidentDate},accidentAddress = #{accidentAddress},
		    accidentCourse = #{accidentCourse},accidentGrade = #{accidentGrade},
		    maimNumber = #{maimNumber},dieNumber = #{dieNumber},accidentCause = #{accidentCause},
		    preventionPlan = #{preventionPlan},disposeOpinion = #{disposeOpinion},claimsSubmitDate = #{claimsSubmitDate},
		    claimsIsFull = #{claimsIsFull},claimsNoticesDate = #{claimsNoticesDate},
		    claimsSchedule = #{claimsSchedule},notSettleCause = #{notSettleCause},hospitalized = #{hospitalized},
		    hospitalizedDateNumber = #{hospitalizedDateNumber},hospitalizationDamage = #{hospitalizationDamage},
		    lossDamage = #{lossDamage},damageAmount = #{damageAmount},invoiceMoney = #{invoiceMoney},
		    settleDate = #{settleDate},responsiblePerson = #{responsiblePerson},
		    remark = #{remark},updateUser = #{updateUser},updateTime = now()
		</set>
		where id = #{id}
	</update>
	
	<select id="getTotalCount" resultType="long">
		select count(r.id) from rp_accident_person r
		<include refid="queryCondition"/>
	</select>
	
	<select id="findAllBy" parameterType="map" resultType="RpAccidentPerson">
		select r.*, ce.name createUserName, ue.name updateUserName, p.name companyName
		from rp_accident_person r
		left join pf_employee ce on r.createUser = ce.employeeId
		left join pf_employee ue on r.updateUser = ue.employeeId
		left join pf_org p on r.companyId = p.orgId
		<include refid="queryCondition"/>
		<if test="pager != null">
		 	<if test="pager.orderBy!=null &amp;&amp; pager.orderBy!=''">
				order by ${pager.orderBy}
				<if test="pager.order!=null &amp;&amp; pager.order!=''">
				  ${pager.order}
				</if>
			</if>
			<if test="for_method_exportData == null">
				limit #{pager.first}, #{pager.pageSize}
			</if>
		</if>
	</select>
	
	<!-- 查询条件 -->
	<sql id="queryCondition">
		<where>
		 	<if test="companyIds != null &amp;&amp; companyIds.size() != 0">
				and r.companyId in
		      	<foreach item="item" index="index" collection="companyIds" open="(" separator="," close=")">
		      		${item}
		      	</foreach>
	      	</if>
	      	<if test="startReportDate != null &amp;&amp; startReportDate !=''">
	      		and r.reportDate &gt;= #{startReportDate}
	      	</if>
	      	<if test="endReportDate !=null &amp;&amp; endReportDate !=''">
	      		and r.ReportDate &lt;= #{endReportDate}
	      	</if>
	      	<if test="reportPerson != null &amp;&amp; reportPerson != ''">
	      		and r.reportPerson like concat('%', #{reportPerson}, '%')
	      	</if>
	      	<if test="name != null &amp;&amp; name != ''">
	      		and r.name like concat('%', #{name}, '%')
	      	</if>
	      	<if test="accidentGrade !=null &amp;&amp; accidentGrade !=''">
	      		and r.accidentGrade = #{accidentGrade}
	      	</if>
		</where>	
	</sql>
	
	<delete id="delete">
		delete from rp_accident_person
		<choose>
			<when test="ids != null &amp;&amp; ids.size() != 0">
				where id in
		      	<foreach item="item" index="index" collection="ids" open="(" separator="," close=")">
		      		#{item}
		      	</foreach>
		    </when>
		    <otherwise>
		      	where 1 = 2
		    </otherwise>
		</choose>
	</delete>
	
</mapper>