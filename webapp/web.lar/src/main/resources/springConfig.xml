<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.1.xsd">
      
	<aop:aspectj-autoproxy proxy-target-class="true"/>
      
	<context:component-scan base-package="com.sdcloud" />
	<!-- 缺省的异步任务线程池 -->   
	<task:annotation-driven/>  
	<!-- <task:executor id="asyncExecutor" pool-size="100-10000" queue-capacity="10" /> -->
	
	<context:property-placeholder location="classpath:sysConfig.properties" />
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${jdbc.driverClass}" />
		<property name="url" value="${jdbc.jdbcUrl}" />
		<property name="username" value="${jdbc.user}" />
		<property name="password" value="${jdbc.password}" />
		<property name="connectionInitSqls" value="set names utf8mb4;"/>
	</bean>

	<!-- 方便java代码里获得配置文件属性值  -->
	<util:properties id="sysConfig" location="classpath:sysConfig.properties" />
	
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="typeAliasesPackage" value="com.sdcloud.api.lar.entity"></property>
		<property name="configLocation" value="classpath:mybatis-config.xml" />
	</bean>

	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate"
		scope="prototype">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>
	
    <bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
	 <!--  核心线程数	  -->
	  <property name="corePoolSize" value="${task.core_pool_size}" />
	 <!--  最大线程数   -->
	  <property name="maxPoolSize" value="${task.max_pool_size}" />
	<!--   队列最大长度 -->
	  <property name="queueCapacity" value="${task.queue_capacity}" />
	  <!-- 线程池维护线程所允许的空闲时间，默认为60s -->
	  <property name="keepAliveSeconds" value="${task.keep_alive_seconds}" />
	</bean>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.sdcloud.biz.lar.dao,com.sdcloud.biz.hl.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>

	<bean id="jacksonMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean>

	<mvc:annotation-driven>
        <mvc:message-converters register-defaults="true">
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="objectMapper">
                    <bean class="com.sdcloud.web.lar.util.json.CommonObjectMapper"/>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>
    <mvc:default-servlet-handler/>

	<mvc:resources mapping="/static/**" location="/static/" />

	<!-- 配置SpringMVC对文件上传的支持 -->
	<!-- 配置之前需要导入支持文件上传的两个jar包 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 配置编码环境，要跟JSP页面一致 -->
		<property name="defaultEncoding" value="UTF-8" />
		<!-- 配置上传文件总大小 -->
		<property name="maxUploadSize" value="104857600" />
	</bean>
	
	<bean id="authenticationFilter" class="com.sdcloud.framework.filter.AuthenticationFilter">
		<property name="userAuthority" ref="userAuthorityService"></property>
		<property name="userLoginInfo" ref="userLoginInfoService"></property>
	</bean>

	<bean id="authorityFilter" class="com.sdcloud.framework.filter.AuthorityFilter">
		<property name="userAuthority" ref="userAuthorityService"></property>
		<property name="userLoginInfo" ref="userLoginInfoService"></property>
	</bean>

	<bean id="exceptionFilter" class="com.sdcloud.framework.filter.ExceptionFilter">
	</bean>

	<bean id="codeFilter" class="com.sdcloud.framework.filter.CodeFilter">
		<property name="codeService" ref="codeService"></property>
	</bean>
	<bean id="accessFilter" class="com.sdcloud.framework.filter.AccessFilter" />
	<bean id="pingppFilter" class="com.sdcloud.web.lar.controller.pingpp.PingppFilter" />
	
	<bean id="hlAuthorityFilter" class="com.sdcloud.web.hl.util.HlAuthorityFilter">
		<property name="validToken" value="bc7e912a48942572"></property>
	</bean>

	<bean id="saAuthorityFilter" class="com.sdcloud.web.sa.utils.SAAuthorityFilter">
		<property name="validToken" value="34fsfw32f231434321"></property>
	</bean>
 	
	<bean id="myfilterChainProxy" class="org.springframework.security.web.FilterChainProxy">
	    <constructor-arg>
			<list>
				<!-- authenticationFilter -->
				<security:filter-chain pattern="/api/**" filters="exceptionFilter,authorityFilter,logFilter,accessFilter,commonFilter" />
				<security:filter-chain pattern="/app/**" filters="accessFilter,commonFilter" />
				<security:filter-chain pattern="/api/*/insert" filters="exceptionFilter,authorityFilter,authenticationFilter,codeFilter,logFilter" />
				<security:filter-chain pattern="/api/*/delete" filters="exceptionFilter,authorityFilter,authenticationFilter,codeFilter,logFilter" />
				<security:filter-chain pattern="/pingxx/webhooks/**" filters="pingppFilter" />
				<security:filter-chain pattern="/jhl/**" filters="hlAuthorityFilter,accessFilter" />
				<security:filter-chain pattern="/apihl/**" filters="exceptionFilter,authorityFilter,logFilter,accessFilter,commonFilter" />
				<security:filter-chain pattern="/shipAnalysis/**" filters="saAuthorityFilter,accessFilter" />
			</list>
		</constructor-arg>
	</bean>
	
	<!-- <bean id="cacheAuthorityRedisInit" class="com.sdcloud.web.security.init.CacheAuthorityRedisInit">
        <property name="userAuthorityService" ref="userAuthorityService"></property>
        <property name="functionService" ref="functionService"></property>
        <property name="moduleService" ref="moduleService"></property>
        <property name="rightService" ref="rightService"></property>
        <property name="roleService" ref="roleService"></property>
    </bean> -->
    
	<import resource="dubboConfig.xml" />
	<import resource="applicationContext-captcha.xml" />
</beans>